{"remainingRequest":"I:\\绘图\\testt\\node_modules\\thread-loader\\dist\\cjs.js!I:\\绘图\\testt\\node_modules\\babel-loader\\lib\\index.js!I:\\绘图\\testt\\node_modules\\cache-loader\\dist\\cjs.js??ref--1-0!I:\\绘图\\testt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\绘图\\testt\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\绘图\\testt\\src\\App.vue","mtime":1646460197922},{"path":"I:\\绘图\\testt\\babel.config.js","mtime":1646459193362},{"path":"I:\\绘图\\testt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\babel-loader\\lib\\index.js","mtime":1646458951294},{"path":"I:\\绘图\\testt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\vue-loader\\lib\\index.js","mtime":1646458959227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:aW1wb3J0ICJjb3JlLWpzL21vZHVsZXMvZXMuYXJyYXkuc2xpY2UuanMiOwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwovLwppbXBvcnQgeyBpbml0Q2FudmFzLCBkcmF3SXJyZWd1bGFyLCBkcmF3UmVjdCwgZHJhd1JlY3QyLCBkcmF3TGluZSwgZHJhd1NuYXAsIGRyYXdIb29rLCBkcmF3VGV4dCB9IGZyb20gJ0AvdXRpbHMvc2tldGNobWFwJzsKZXhwb3J0IGRlZmF1bHQgewogIGRhdGE6IGZ1bmN0aW9uIGRhdGEoKSB7CiAgICByZXR1cm4gewogICAgICB0b3dlcmNyYW5lUGFyYW06IFt7CiAgICAgICAgbnVtYmVyOiBbMSwgMiwgMywgNCwgNSwgNiwgOF0sCiAgICAgICAgd2VpZ2h0OiAnNC40dCcsCiAgICAgICAgbWV0ZXI6ICc4bScKICAgICAgfSwgewogICAgICAgIG51bWJlcjogWzEsIDIsIDMsIDQsIDUsIDZdLAogICAgICAgIHdlaWdodDogJzQuNHQnLAogICAgICAgIG1ldGVyOiAnNm0nCiAgICAgIH0sIHsKICAgICAgICBudW1iZXI6IFsxLCAyLCAzLCA0LCA1XSwKICAgICAgICB3ZWlnaHQ6ICc0LjR0JywKICAgICAgICBtZXRlcjogJzVtJwogICAgICB9LCB7CiAgICAgICAgbnVtYmVyOiBbMSwgMiwgMywgNF0sCiAgICAgICAgd2VpZ2h0OiAnNC40dCcsCiAgICAgICAgbWV0ZXI6ICc0bScKICAgICAgfSwgewogICAgICAgIG51bWJlcjogWzEsIDIsIDNdLAogICAgICAgIHdlaWdodDogJzQuNHQnLAogICAgICAgIG1ldGVyOiAnM20nCiAgICAgIH0sIHsKICAgICAgICBudW1iZXI6IFsxLCAyXSwKICAgICAgICB3ZWlnaHQ6ICc0LjR0JywKICAgICAgICBtZXRlcjogJzJtJwogICAgICB9XSwKICAgICAgYXR0YWNoUGFyYW06IFt7CiAgICAgICAgbnVtYmVyOiBbM10sCiAgICAgICAgaGVpZ2h0OiBudWxsLAogICAgICAgIHRvdGFsSGVpZ2h0OiAzCiAgICAgIH0sIHsKICAgICAgICBudW1iZXI6IFszLCA0XSwKICAgICAgICBoZWlnaHQ6IDMsCiAgICAgICAgdG90YWxIZWlnaHQ6IDQKICAgICAgfSwgewogICAgICAgIG51bWJlcjogWzMsIDQsIDVdLAogICAgICAgIGhlaWdodDogNCwKICAgICAgICB0b3RhbEhlaWdodDogNQogICAgICB9LCB7CiAgICAgICAgbnVtYmVyOiBbMywgNCwgNSwgNl0sCiAgICAgICAgaGVpZ2h0OiA1LAogICAgICAgIHRvdGFsSGVpZ2h0OiA2CiAgICAgIH0sIHsKICAgICAgICBudW1iZXI6IFszLCA0LCA1LCA2LCA3XSwKICAgICAgICBoZWlnaHQ6IDYsCiAgICAgICAgdG90YWxIZWlnaHQ6IDcKICAgICAgfSwgewogICAgICAgIG51bWJlcjogWzMsIDQsIDUsIDYsIDcsIDhdLAogICAgICAgIGhlaWdodDogNywKICAgICAgICB0b3RhbEhlaWdodDogOAogICAgICB9XQogICAgfTsKICB9LAogIGNyZWF0ZWQ6IGZ1bmN0aW9uIGNyZWF0ZWQoKSB7CiAgICB2YXIgX3RoaXMgPSB0aGlzOwoKICAgIHRoaXMuJG5leHRUaWNrKGZ1bmN0aW9uICgpIHsKICAgICAgLy8g57uY5Yi26IeC6IqCCiAgICAgIF90aGlzLnRvd2VyY3JhbmUoJ3Rvd2VyY3JhbmUnKTsgLy8g57uY5Yi26ZmE552ACgoKICAgICAgX3RoaXMuYXR0YWNoKCdhdHRhY2gnKTsKICAgIH0pOwogIH0sCiAgbWV0aG9kczogewogICAgdG93ZXJjcmFuZTogZnVuY3Rpb24gdG93ZXJjcmFuZShpZCwgcmVjdEdhcCwgcmVjdFdpZHRoLCByZWN0SGVpZ2h0KSB7CiAgICAgIC8vIOe7mOWItuWuueWZqCDlrr3luqYgNjMwcHgg6auY5bqmIDU1MHB4CiAgICAgIHZhciB0b3dlcmNyYW5lQ2FudmFzID0gZG9jdW1lbnQuZ2V0RWxlbWVudEJ5SWQoaWQpOwogICAgICB2YXIgY3R4ID0gdG93ZXJjcmFuZUNhbnZhcy5nZXRDb250ZXh0KCcyZCcpOyAvLyDliJ3lp4vljJZjYW52YXMKCiAgICAgIGluaXRDYW52YXMoY3R4KTsgLy8gY2FudmFz5byA5aeL57uY5Zu+CiAgICAgIC8vIOacgOWkmuaYvuekuiA456eN6IeC6IqC57uE5ZCICgogICAgICB2YXIgdG93ZXJjcmFuZSA9IFtdOwogICAgICB2YXIgdG93ZXJjcmFuZUxlbmd0aCA9IHRoaXMudG93ZXJjcmFuZVBhcmFtLmxlbmd0aDsgLy8g6I635Y+W5pWw57uE55qE6ZW/5bqmCiAgICAgIC8vIOWmguaenGlk5pivdG93ZXJjcmFuZeeahOaXtuWAmQoKICAgICAgaWYgKGlkID09PSAndG93ZXJjcmFuZScpIHsKICAgICAgICBpZiAodG93ZXJjcmFuZUxlbmd0aCA8PSA4KSB7CiAgICAgICAgICB0b3dlcmNyYW5lID0gdGhpcy50b3dlcmNyYW5lUGFyYW07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOWQpuWImeeahOivnSzmiKrlj5bliY0457uE55qE5pWw5o2uIOWNsyAwLTcKICAgICAgICAgIC8vIHNsaWNlIFsgKQogICAgICAgICAgdG93ZXJjcmFuZSA9IHRoaXMudG93ZXJjcmFuZVBhcmFtLnNsaWNlKDAsIDgpOwogICAgICAgIH0KICAgICAgfSBlbHNlIHsKICAgICAgICAvLyBpZOaYr2RldGFpbOeahOaXtuWAmQogICAgICAgIHRvd2VyY3JhbmUgPSB0aGlzLnRvd2VyY3JhbmVQYXJhbTsKICAgICAgfSAvLyDpgY3ljobloZTlkIrlj4LmlbDmlbDnu4QKCgogICAgICB2YXIgYmVnaW5YID0gMzA7IC8vIOWbuuWumuS4jeWPmAoKICAgICAgdmFyIGJlZ2luWSA9IDA7CiAgICAgIHZhciBlbmRYID0gYmVnaW5YICsgNDA7CiAgICAgIHZhciBlbmRZID0gYmVnaW5ZICsgMjA7CiAgICAgIHZhciB3aWR0aCA9IHJlY3RXaWR0aCB8fCA1NTsgLy8g5q+P5Liq55+p5b2i55qE5a695bqmCgogICAgICB2YXIgaGVpZ2h0ID0gcmVjdEhlaWdodCB8fCAyMDsgLy8g5q+P5Liq55+p5b2i55qE6auY5bqmCgogICAgICB2YXIgZ2FwID0gcmVjdEdhcCB8fCA0MDsKCiAgICAgIGZvciAodmFyIGkgPSAwOyBpIDwgdG93ZXJjcmFuZS5sZW5ndGg7IGkrKykgewogICAgICAgIC8vIOWmguaenOaYr+esrOS4gOasoSzliJnmsqHmnInlv4XopoHliqA0NSzliqDkuobkvJrlr7zoh7TmnIDkuIrpnaLlpJrlh7rnqbrnmb0KICAgICAgICBpZiAoaSA9PT0gMCkgewogICAgICAgICAgYmVnaW5ZICs9IDU7CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIC8vIOWQpuWImSzmr4/mrKHlkJHkuIvliqA0MAogICAgICAgICAgYmVnaW5ZICs9IGdhcDsKICAgICAgICB9CgogICAgICAgIGVuZFkgPSBiZWdpblkgKyAyMDsgLy8g5q+P5qyh6YeN5paw57uZZW5kWOi1i+WAvAoKICAgICAgICBlbmRYID0gYmVnaW5YICsgNDA7IC8vIOiOt+WPluavj+S4gOe7hOiHguiKgueahOaVsOe7hOmVv+W6pgoKICAgICAgICB2YXIgbGVuZ3RoID0gdG93ZXJjcmFuZVtpXS5udW1iZXIubGVuZ3RoOyAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKirlpITnkIblvILluLjmlbDmja4KCiAgICAgICAgaWYgKGxlbmd0aCA9PT0gMCkgewogICAgICAgICAgLy8g55u05o6l55S76ZW/5bqm5Li6MTDnmoToh4LoioIs5pyA5ZCO5Yqg5LiK5ZCK6YeN5ZKM57Gz5pWw5LiU5LiN57uY5Yi26YeM6Z2i55qE5ZyG5b2iCiAgICAgICAgICAvLyDlhYjojrflj5bmnIDnu4jnmoR45ZKMeQogICAgICAgICAgdmFyIGtfZW5kWSA9IGJlZ2luWSArIDIwOwogICAgICAgICAgdmFyIGtfZW5kWCA9IGJlZ2luWCArIDQwOyAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKirlpITnkIblvILluLjmlbDmja7kuYvlvILluLjmlbDmja7nmoTmmL7npLoKICAgICAgICAgIC8vIOW8guW4uOaVsOaNrueahOiHguiKguaVsOS+neasoemAkuWHjwoKICAgICAgICAgIGZvciAodmFyIGsgPSAxMDsgayA+IGk7IGstLSkgewogICAgICAgICAgICAvLyDmr4/mrKHph43mlrDnu5llbmRY6LWL5YC8CiAgICAgICAgICAgIGtfZW5kWCArPSA0MDsKICAgICAgICAgIH0gLy8g5YaN6L+b6KGM57uY5Yi2CgoKICAgICAgICAgIGRyYXdJcnJlZ3VsYXIoYmVnaW5YLCBiZWdpblksIGJlZ2luWCAtIDMwLCBrX2VuZFksIGtfZW5kWCwgMSwgJyMwMDAnLCAxLCB0cnVlKTsgLy8g5YaN5Yqg5LiK5ZCK6ZKp5ZKM57Gz5pWwCgogICAgICAgICAgdmFyIHN0YXJ0WSA9IGJlZ2luWSArIGhlaWdodDsKCiAgICAgICAgICB2YXIgX2VuZFkgPSBzdGFydFkgKyAxMjsgLy8g5aaC5p6cIG1ldGVy5Li6IOaIliB3ZWlnaHQgIG51bGwg55qE6K+dIOWImeS4jeaYvuekugoKCiAgICAgICAgICBkcmF3SG9vayhrX2VuZFgsIHN0YXJ0WSwgX2VuZFksIDMsIDAsIDI3MCwgZmFsc2UsIHRydWUsIDAuNSwgJyMwMDAnLCB0b3dlcmNyYW5lW2ldLndlaWdodCA/IHRvd2VyY3JhbmVbaV0ud2VpZ2h0IDogJycsIHRvd2VyY3JhbmVbaV0ubWV0ZXIgPyB0b3dlcmNyYW5lW2ldLm1ldGVyIDogJycpOyAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKirlpITnkIblvILluLjmlbDmja4KICAgICAgICB9IGVsc2UgewogICAgICAgICAgZm9yICh2YXIgaiA9IDA7IGogPCBsZW5ndGg7IGorKykgewogICAgICAgICAgICBpZiAoaiA9PT0gMCkgewogICAgICAgICAgICAgIC8vIOesrOS4gOS4qumDveaYr+S4jeinhOWImeeahO+8jOS4lOmDveaYrzEKICAgICAgICAgICAgICBkcmF3SXJyZWd1bGFyKGJlZ2luWCwgYmVnaW5ZLCBiZWdpblggLSAzMCwgZW5kWSwgZW5kWCwgMSwgJyMwMDAnLCAxKTsKICAgICAgICAgICAgfSBlbHNlIHsKICAgICAgICAgICAgICBkcmF3UmVjdChlbmRYLCBiZWdpblksIHdpZHRoLCBoZWlnaHQsICcjMDAwJywgdG93ZXJjcmFuZVtpXS5udW1iZXJbal0pOwogICAgICAgICAgICAgIGVuZFggKz0gd2lkdGg7IC8vIOWcqOacgOWQjuS4gOS4queahOWQjumdouWKoOWQiumSqQoKICAgICAgICAgICAgICBpZiAoaiA9PT0gbGVuZ3RoIC0gMSkgewogICAgICAgICAgICAgICAgdmFyIF9zdGFydFkgPSBiZWdpblkgKyBoZWlnaHQ7CgogICAgICAgICAgICAgICAgdmFyIF9lbmRZMiA9IF9zdGFydFkgKyAxMjsKCiAgICAgICAgICAgICAgICBkcmF3SG9vayhlbmRYLCBfc3RhcnRZLCBfZW5kWTIsIDMsIDAsIDI3MCwgZmFsc2UsIHRydWUsIDAuNSwgJyMwMDAnLCB0b3dlcmNyYW5lW2ldLndlaWdodCA/IHRvd2VyY3JhbmVbaV0ud2VpZ2h0IDogJycsIHRvd2VyY3JhbmVbaV0ubWV0ZXIgPyB0b3dlcmNyYW5lW2ldLm1ldGVyIDogJycpOwogICAgICAgICAgICAgIH0KICAgICAgICAgICAgfQogICAgICAgICAgfQogICAgICAgIH0KICAgICAgfQogICAgfSwKCiAgICAvKiog6ZmE552A56S65oSP5Zu+DQogICAgICogaWQgOueUu+W4g+e7mOWItueahOWuueWZqCAgICAgICAgICDvvIjlv4XloavpobnvvIkNCiAgICAgKiByZWZlckhlaWdodO+8muWPguiAg+mrmOW6piAgICAgIO+8iOmdnuW/heWhq+mhue+8iSAgICAtLS0tLS0tLeaciem7mOiupOWAvA0KICAgICAqIHJlZmVyV2lkdGjvvJrlj4LogIPlrr3luqYgICAgICAgIO+8iOmdnuW/heWhq+mhue+8iSAgIC0tLS0tLS0t5pyJ6buY6K6k5YC8DQogICAgICogcmVjdFdpZHRo77ya55+p5b2i5a695bqmICAgIO+8iOmdnuW/heWhq+mhue+8iSAgICAgICAgLS0tLS0tLS3mnInpu5jorqTlgLwNCiAgICAgKiBlbXB0eVJlY3RIZWlnaHTvvJrnqbrnn6nlvaLnmoTpq5jluqYgICDvvIjpnZ7lv4XloavpobnvvIkgIC0tLS0tLS0t5pyJ6buY6K6k5YC8DQogICAgICogbnVtYmVyUmVjdEhlaWdodDrmlbDlrZfnn6nlvaLnmoTpq5jluqYgIO+8iOmdnuW/heWhq+mhue+8iSAgLS0tLS0tLS3mnInpu5jorqTlgLwNCiAgICAgKiBhdHRhY2hHYXA65q+P6YGT6ZmE552A5LmL6Ze055qE6Ze06LedICDvvIjpnZ7lv4XloavpobnvvIkgIC0tLS0tLS0t5pyJ6buY6K6k5YC8DQogICAgICogcmVjdFNsaWRlWDrkvqfovrnnn6nlvaLnmoTot53nprsgIO+8iOmdnuW/heWhq+mhue+8iSAgLS0tLS0tLS3mnInpu5jorqTlgLwNCiAgICAgKiBiYXNpY1NuYXDvvJrljaHmiaPnmoTln7rlh4blgLwgIO+8iOmdnuW/heWhq+mhue+8iSAgLS0tLS0tLS3mnInpu5jorqTlgLwNCiAgICAgKi8KICAgIGF0dGFjaDogZnVuY3Rpb24gYXR0YWNoKGlkLCByZWZlckhlaWdodCwgcmVmZXJXaWR0aCwgcmVjdFdpZHRoLCBlbXB0eVJlY3RIZWlnaHQsIG51bWJlclJlY3RIZWlnaHQsIGF0dGFjaEdhcCwgcmVjdFNsaWRlWCwgYmFzaWNTbmFwKSB7CiAgICAgIC8vIOiuvue9rueahOWuueWZqOeahOmrmOW6puS4uiA1NTBweCDlrr3luqbkuLogNjMwcHgKICAgICAgdmFyIHJlZmVyZW5jZUhlaWdodCA9IHJlZmVySGVpZ2h0IHx8IDQyMDsgLy8gaHRtbOS4reiuvue9rueahOmrmOW6pizkvZzkuLrov5nph4znmoTlj4LogIPpq5jluqYKCiAgICAgIHZhciByZWZlcmVuY2VXaWR0aCA9IHJlZmVyV2lkdGggfHwgNDgwOyAvLyBodG1s5Lit6K6+572u55qE5a695bqmLOS9nOS4uui/memHjOeahOWPguiAg+WuveW6pgoKICAgICAgdmFyIGF0dGFjaFBhcmFtOyAvLyDojrflj5ZhdHRhY2hQYXJhbeeahOmVv+W6pgoKICAgICAgdmFyIGF0dGFjaFBhcmFtTGVuZ3RoID0gdGhpcy5hdHRhY2hQYXJhbS5sZW5ndGg7IC8vIOWIpOaWreaYr+WQpuimgeaIquWPlmF0dGFjaFBhcmFt6YeM6Z2i55qE5YmNOOe7hOaVsOaNrgogICAgICAvLyDlpoLmnpzojrflj5bnu5jliLbnmoRpZOaYr2F0dGFjaAoKICAgICAgaWYgKGlkID09PSAnYXR0YWNoJykgewogICAgICAgIGlmICh0aGlzLmF0dGFjaFBhcmFtTGVuZ3RoIDw9IGF0dGFjaFBhcmFtTGVuZ3RoKSB7CiAgICAgICAgICBhdHRhY2hQYXJhbSA9IHRoaXMuYXR0YWNoUGFyYW07CiAgICAgICAgfSBlbHNlIHsKICAgICAgICAgIGF0dGFjaFBhcmFtID0gdGhpcy5hdHRhY2hQYXJhbS5zbGljZSgwLCA4KTsKICAgICAgICB9CiAgICAgIH0gZWxzZSB7CiAgICAgICAgLy8g5aaC5p6c5b2T5YmN57uY5Yi255qEaWTmmK9kZXRhaWwKICAgICAgICBhdHRhY2hQYXJhbSA9IHRoaXMuYXR0YWNoUGFyYW07CiAgICAgIH0gLy8g6I635Y+WZG9t5YWD57SgCgoKICAgICAgdmFyIGF0dGFjaCA9IGRvY3VtZW50LmdldEVsZW1lbnRCeUlkKGlkKTsKICAgICAgdmFyIGN0eCA9IGF0dGFjaC5nZXRDb250ZXh0KCcyZCcpOyAvLyDliJ3lp4vljJZjYW52YXMKCiAgICAgIGluaXRDYW52YXMoY3R4KTsgLy8g57uY5Yi25pyA5bqV6YOo55qE5rC05bmz57q/CiAgICAgIC8vIHN0YXJ0WCwgc3RhcnRZLCBlbmRYLCBlbmRZLCBsaW5lV2lkdGgsIGJnQ29sb3IKCiAgICAgIGRyYXdMaW5lKDAsIHJlZmVyZW5jZUhlaWdodCAtIDEwLCByZWZlcmVuY2VXaWR0aCwgcmVmZXJlbmNlSGVpZ2h0IC0gMTAsIDEsICcjMDAwJyk7IC8vIOW8gOWni+e7mOWItuWkhAoKICAgICAgdmFyIGJlZ2luWCA9IDEwOyAvLyB46L205byA5aeL5aSECgogICAgICB2YXIgYmVnaW5ZID0gcmVmZXJlbmNlSGVpZ2h0IC0gMTAgLSA1OyAvLyDlvIDlp4vlpIQKCiAgICAgIHZhciB3aWR0aCA9IHJlY3RXaWR0aCB8fCAxMjsgLy8g5q+P5Liq55+p5b2i55qE5a695bqmCgogICAgICB2YXIgYm90dG9tSGVpZ2h0ID0gNTsgLy8g5pyA5bqV6YOo55+p5b2i55qE6auY5bqmCgogICAgICB2YXIgZW1wdHlIZWlnaHQgPSBlbXB0eVJlY3RIZWlnaHQgfHwgMjA7IC8vIOepuuefqeW9oueahOmrmOW6pgoKICAgICAgdmFyIG51bWJlckhlaWdodCA9IG51bWJlclJlY3RIZWlnaHQgfHwgMTU7IC8vIOacieaVsOWtl+efqeW9oueahOmrmOW6pgoKICAgICAgdmFyIHNpZGVIZWlnaHQgPSA0OyAvLyDkvqfovrnnn6nlvaLnmoTpq5jluqYKCiAgICAgIHZhciBzdGFydFkgPSAwOwogICAgICB2YXIgZ2FwID0gODsgLy8g5LiK5LiL6Ze06ZqUCgogICAgICB2YXIgYXR0R2FwID0gYXR0YWNoR2FwIHx8IDYwOyAvLyDmr4/kuIDpgZPpmYTnnYDkuYvpl7TnmoTot53nprsKICAgICAgLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq57uY5Yi25q+P5LiA6YGT6ZmE552ACgogICAgICBmb3IgKHZhciBpID0gMDsgaSA8IGF0dGFjaFBhcmFtLmxlbmd0aDsgaSsrKSB7CiAgICAgICAgLy8g6YeN5paw6LWL5YC8CiAgICAgICAgYmVnaW5ZID0gcmVmZXJlbmNlSGVpZ2h0IC0gMTAgLSA1OyAvLyDlhbHmnIlu5Liq55+p5b2i77yMCgogICAgICAgIHZhciBuMVkgPSAwOyAvLyBuLTHlpITnn6nlvaIKCiAgICAgICAgdmFyIG4xWCA9IDA7IC8vIG4tMeWkhHjlnZDmoIcKCiAgICAgICAgdmFyIG4yWSA9IDA7IC8vIG4tMuWkhOefqeW9ogoKICAgICAgICB2YXIgRjJZID0gMDsgLy8g56ysMuagueefqeW9oueahOesrDLkuKpZ5Z2Q5qCHCiAgICAgICAgLy8gY29uc3QgbnVtYmVyQXJyYXkgPSBhdHRhY2hQYXJhbVtpXS5udW1iZXIuc2xpY2UoMikgLy8g5Y675o6J6YeM6Z2i55qE5YmN5Lik5Liq5pWwCgogICAgICAgIHZhciBudW1iZXJBcnJheSA9IGF0dGFjaFBhcmFtW2ldLm51bWJlcjsgLy8g5Y675o6J6YeM6Z2i55qE5YmN5Lik5Liq5pWwCiAgICAgICAgLy8g57uY5Yi25pyA5bqV6YOo55qE55+p5b2iCgogICAgICAgIGRyYXdSZWN0MihiZWdpblgsIGJlZ2luWSwgd2lkdGgsIGJvdHRvbUhlaWdodCwgJyMwMDAnLCAnJyk7IC8vIOepuuefqeW9ogoKICAgICAgICBiZWdpblkgLT0gZW1wdHlIZWlnaHQ7CiAgICAgICAgZHJhd1JlY3QyKGJlZ2luWCwgYmVnaW5ZLCB3aWR0aCwgZW1wdHlIZWlnaHQsICcjMDAwJywgJycpOyAvLyDluKbmlbDlrZfnn6nlvaIKCiAgICAgICAgYmVnaW5ZIC09IG51bWJlckhlaWdodDsKICAgICAgICBkcmF3UmVjdDIoYmVnaW5YLCBiZWdpblksIHdpZHRoLCBudW1iZXJIZWlnaHQsICcjMDAwJywgMSk7IC8vIOebuOW9k+S6juaYr+WbuuWumuWGmeatuwoKICAgICAgICBiZWdpblkgLT0gbnVtYmVySGVpZ2h0OwogICAgICAgIGRyYXdSZWN0MihiZWdpblgsIGJlZ2luWSwgd2lkdGgsIG51bWJlckhlaWdodCwgJyMwMDAnLCAyKTsgLy8g55u45b2T5LqO5piv5Zu65a6a5YaZ5q27CgogICAgICAgIEYyWSA9IGJlZ2luWTsgLy8g6LWL5YC857uZRjJZCiAgICAgICAgLy8gKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioq57uY5Yi25q+P5LiA6YGT6ZmE552A55qE57uE5oiQCgogICAgICAgIGZvciAodmFyIGogPSAwOyBqIDwgbnVtYmVyQXJyYXkubGVuZ3RoOyBqKyspIHsKICAgICAgICAgIC8vIOWFiOe7mOWItuWNoeaJo++8jOWGjee7mOWItuW4puacieaVsOWtl+eahOefqeW9ogogICAgICAgICAgLy8g56m65Ye65p2lIGogPT09IDEgLy8g5Zug5Li65Zyo5LiK6Z2i5bey57uP57uY5Yi25Li6MeaXtuWAmeeahOefqeW9ouS6hi0t5Y2zIDIKICAgICAgICAgIGlmIChqID09PSAwKSB7CiAgICAgICAgICAgIHN0YXJ0WSA9IGJlZ2luWSAtIG51bWJlckhlaWdodDsgLy8g5q+P5qyh5Yiw6L+Z6YeM55u45b2T5LqO6YeN5paw57uZc3RhcnRZ6LWL5YC8CiAgICAgICAgICB9IC8vIOe7mOWItuWNoeaJowoKCiAgICAgICAgICBpZiAoYmFzaWNTbmFwKSB7CiAgICAgICAgICAgIHZhciBiYXNpYyA9IGJhc2ljU25hcDsKICAgICAgICAgICAgZHJhd1NuYXAoYmVnaW5YLCBzdGFydFkgKyBiYXNpYyAvIDIgKyAxLCBiZWdpblggKyBiYXNpYyAqIDIgKyAyLCBzdGFydFkgLSBiYXNpYyAqIDIgKyAyLCBiZWdpblggKyBiYXNpYyAqIDMgKyAxLCBzdGFydFkgKyBiYXNpYyAqIDIgKyAyLCBiZWdpblggKyBiYXNpYyAqIDQgKyAxLCBiZWdpblggKyBiYXNpYyAqIDUsIGJlZ2luWCwgc3RhcnRZICsgYmFzaWMgLyAyICsgMSwgYmFzaWMgKiAzKTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIC8vIOe7mOWItuWNoeaJowogICAgICAgICAgICBkcmF3U25hcChiZWdpblgsIHN0YXJ0WSwgYmVnaW5YICsgMywgc3RhcnRZIC0gNSwgYmVnaW5YICsgNiwgc3RhcnRZICsgNSwgYmVnaW5YICsgOCwgYmVnaW5YICsgMTIsIGJlZ2luWCwgc3RhcnRZLCBnYXApOwogICAgICAgICAgfQoKICAgICAgICAgIHN0YXJ0WSA9IHN0YXJ0WSAtIG51bWJlckhlaWdodCAtIGdhcDsgLy8g5pWw5a2X55+p5b2iCiAgICAgICAgICAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKirmt7vliqDlr7nlvILluLjmlbDmja7liKTmlq3nmoTlpITnkIbkuYtudW1iZXIKCiAgICAgICAgICBkcmF3UmVjdDIoYmVnaW5YLCBzdGFydFksIHdpZHRoLCBudW1iZXJIZWlnaHQsICcjMDAwJywgbnVtYmVyQXJyYXlbal0gPyBudW1iZXJBcnJheVtqXSA6ICcnKTsgLy8g5pyA5LiK6Z2i55qE55+p5b2i5bem5L6n5LiN57uY5Yi25L6n6L6555+p5b2iCgogICAgICAgICAgdmFyIGxlbmd0aCA9IG51bWJlckFycmF5Lmxlbmd0aCAtIDE7CiAgICAgICAgICB2YXIgc2lkZVggPSBiZWdpblggLSBzaWRlSGVpZ2h0ICogMyAtIDE7IC8vIOS+p+i+ueefqeW9oueahHjlnZDmoIcKCiAgICAgICAgICBpZiAoaiA8IGxlbmd0aCkgewogICAgICAgICAgICAvLyDnu5jliLbkvqfovrnnn6nlvaIKICAgICAgICAgICAgZHJhd1JlY3QyKHJlY3RTbGlkZVggPyBzaWRlWCAtIHJlY3RTbGlkZVggOiBzaWRlWCwgc3RhcnRZICsgc2lkZUhlaWdodCwgd2lkdGgsIHNpZGVIZWlnaHQsICcjMDAwJywgJycpOyAvLyBuLTHlpITnn6nlvaIKCiAgICAgICAgICAgIGlmIChqID09PSBsZW5ndGggLSAxKSB7CiAgICAgICAgICAgICAgLy8g57uY5Yi256qB5Ye657q/CiAgICAgICAgICAgICAgLy8gZHJhd0xpbmUoc2lkZVgsIHN0YXJ0WSArIHNpZGVIZWlnaHQgKiAyLCBzaWRlWCAtIHdpZHRoIC0gd2lkdGggLyAyLCBzdGFydFkgKyBzaWRlSGVpZ2h0ICogMiwgMSwgJyMwMDAnKQogICAgICAgICAgICAgIGRyYXdMaW5lKHNpZGVYLCBzdGFydFkgKyBzaWRlSGVpZ2h0ICogMiwgc2lkZVggLSB3aWR0aCAtIHdpZHRoIC8gMiwgc3RhcnRZICsgc2lkZUhlaWdodCAqIDIsIDEsICcjMDAwJyk7IC8vIOaLv+WIsG4xWe+8jG4xWOeahOWAvAoKICAgICAgICAgICAgICBuMVkgPSBzdGFydFkgKyBzaWRlSGVpZ2h0ICogMjsKICAgICAgICAgICAgICBuMVggPSBzaWRlWCAtIHdpZHRoOwogICAgICAgICAgICB9IC8vIG4tMuWkhOefqeW9ogoKCiAgICAgICAgICAgIGlmIChqID09PSBsZW5ndGggLSAyKSB7CiAgICAgICAgICAgICAgbjJZID0gc3RhcnRZICsgc2lkZUhlaWdodDsKICAgICAgICAgICAgfQogICAgICAgICAgfSAvLyDlhYjnu5jliLbmlbDlgLwKICAgICAgICAgIC8vIOWmguaenOW9k+WJjeaYr+mZhOedgOe7hOaIkOeahOacgOS4iumdoizliJnlnKjkuIrpnaLmoIfms6jmnIDlpKfotbfljYfpq5jluqbnmoTlgLwKCgogICAgICAgICAgaWYgKGogPT09IG51bWJlckFycmF5Lmxlbmd0aCAtIDEpIHsKICAgICAgICAgICAgLy8g57uY5Yi25paH5a2XCiAgICAgICAgICAgIC8vIGRyYXdUZXh0KHRleHQsIHgsIHksIGNvbG9yLCBmb250LCB0ZXh0QWxpZ24pCiAgICAgICAgICAgIC8vICoqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKua3u+WKoOWvueW8guW4uOaVsOaNruWIpOaWreeahOWkhOeQhuS5i3RvdGFsSGVpZ2h0CiAgICAgICAgICAgIGRyYXdUZXh0KGF0dGFjaFBhcmFtW2ldLnRvdGFsSGVpZ2h0ID8gYXR0YWNoUGFyYW1baV0udG90YWxIZWlnaHQgOiAnJywgYmVnaW5YICsgd2lkdGggLyAyLCBzdGFydFkgLSAyLCAnI2YwMCcsICflvq7ova/pm4Xpu5EnLCAnY2VudGVyJyk7CiAgICAgICAgICB9IC8vIOWGjei/m+ihjHN0YXJ0WeeahOiuoeeulwoKCiAgICAgICAgICBzdGFydFkgPSBzdGFydFkgLSBudW1iZXJIZWlnaHQgLSAyOyAvLyDkuIvkuIDkuKp55Z2Q5qCH55qE5byA5aeLCiAgICAgICAgfSAvLyDmr4/kuIDnu4TkuYvpl7TnmoTot53nprsKCgogICAgICAgIGJlZ2luWCArPSBhdHRHYXA7IC8vIOesrOS4gOe7hOS4jeWtmOWcqOetiemrmOe6vwoKICAgICAgICBpZiAoaSA+IDApIHsKICAgICAgICAgIC8vIOeUqOadpeWKqOaAgeWIpOaWreeUqOWTquS4qlnlgLwKICAgICAgICAgIHZhciBZID0gMDsgLy8g56ys5LqM57uE77yM5Lik57uE5Y2h5omj77yM6ZW/5bqm5Li6IGNvbnN0IGxlbmd0aD0gKG51bWJlckFycmF5Lmxlbmd0aCAtIDEpIOWSjCBsZW5ndGgtMSDkuI3lrZjlnKggIGxlbmd0aC0y77yM5Y2z5Y+q5L2/55SobjFZCgogICAgICAgICAgaWYgKGkgPT09IDEpIHsKICAgICAgICAgICAgWSA9IEYyWTsKICAgICAgICAgIH0gZWxzZSB7CiAgICAgICAgICAgIFkgPSBuMlk7CiAgICAgICAgICB9IC8vIOmZhOedgOWkhOmrmOW6puS4iumdoueahOerlue6vwoKCiAgICAgICAgICBkcmF3TGluZShuMVgsIG4xWSwgbjFYLCBZLCAxLCAnIzAwMCcpOyAvLyAqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKirmt7vliqDlr7nlvILluLjmlbDmja7liKTmlq3nmoTlpITnkIbkuYtoZWlnaHQKICAgICAgICAgIC8vIOmZhOedgOWkhOmrmOW6puaVsOWAvCDmlbDlgLwg6auY5bqm6K6+572u5Li6IDIwCgogICAgICAgICAgZHJhd1RleHQoYXR0YWNoUGFyYW1baV0uaGVpZ2h0ID8gYXR0YWNoUGFyYW1baV0uaGVpZ2h0IDogJycsIG4xWCwgWSArIDE1LCAnIzAwMCcsICflvq7ova/pm4Xpu5EnLCAnY2VudGVyJyk7IC8vIOaWh+Wtl+S4i+mdoue6v+autQogICAgICAgICAgLy8g6ZmE552A5aSE6auY5bqm5LiL6Z2i55qE56uW57q/CgogICAgICAgICAgZHJhd0xpbmUobjFYLCBZICsgMjAsIG4xWCwgcmVmZXJlbmNlSGVpZ2h0IC0gMTAgLSA1ICsgNSwgMSwgJyMwMDAnKTsKICAgICAgICB9CiAgICAgIH0KICAgIH0KICB9Cn07"},{"version":3,"mappings":";;;;;;;;;;;;;;;;AAgBA,SACAA,UADA,EAEAC,aAFA,EAGAC,QAHA,EAIAC,SAJA,EAKAC,QALA,EAMAC,QANA,EAOAC,QAPA,EAQAC,QARA,QASA,mBATA;AAUA;AACAC,MADA,kBACA;AACA;AACAC,wBACA;AACAC,qCADA;AAEAC,sBAFA;AAGAC;AAHA,OADA,EAMA;AACAF,kCADA;AAEAC,sBAFA;AAGAC;AAHA,OANA,EAWA;AACAF,+BADA;AAEAC,sBAFA;AAGAC;AAHA,OAXA,EAgBA;AACAF,4BADA;AAEAC,sBAFA;AAGAC;AAHA,OAhBA,EAqBA;AACAF,yBADA;AAEAC,sBAFA;AAGAC;AAHA,OArBA,EA0BA;AACAF,sBADA;AAEAC,sBAFA;AAGAC;AAHA,OA1BA,CADA;AAiCAC,oBACA;AACAH,mBADA;AAEAI,oBAFA;AAGAC;AAHA,OADA,EAMA;AACAL,sBADA;AAEAI,iBAFA;AAGAC;AAHA,OANA,EAWA;AACAL,yBADA;AAEAI,iBAFA;AAGAC;AAHA,OAXA,EAgBA;AACAL,4BADA;AAEAI,iBAFA;AAGAC;AAHA,OAhBA,EAqBA;AACAL,+BADA;AAEAI,iBAFA;AAGAC;AAHA,OArBA,EA0BA;AACAL,kCADA;AAEAI,iBAFA;AAGAC;AAHA,OA1BA;AAjCA;AAmEA,GArEA;AAsEAC,SAtEA,qBAsEA;AAAA;;AACA;AACA;AACA,qCAFA,CAGA;;;AACA;AAEA,KANA;AAOA,GA9EA;AA+EAC;AACAC,cADA,sBACAC,EADA,EACAC,OADA,EACAC,SADA,EACAC,UADA,EACA;AACA;AACA;AACA,kDAHA,CAIA;;AACAtB,sBALA,CAMA;AAEA;;AACA;AACA,yDAVA,CAUA;AACA;;AACA;AACA;AACAkB;AACA,SAFA,MAEA;AACA;AACA;AACAA;AACA;AACA,OARA,MAQA;AACA;AACAA;AACA,OAvBA,CAwBA;;;AACA,sBAzBA,CAyBA;;AACA;AACA;AACA;AACA,kCA7BA,CA6BA;;AACA,oCA9BA,CA8BA;;AACA;;AACA;AACA;AACA;AACAK;AACA,SAFA,MAEA;AACA;AACAA;AACA;;AACAC,2BARA,CASA;;AACAC,2BAVA,CAWA;;AACA,iDAZA,CAaA;;AACA;AACA;AACA;AACA;AACA,mCAJA,CAKA;AACA;;AACA;AACA;AACAC;AACA,WAVA,CAWA;;;AACAzB,yFAZA,CAaA;;AACA;;AACA,kCAfA,CAiBA;;;AAEAK,iLAnBA,CAoBA;AACA,SArBA,MAqBA;AACA;AACA;AACA;AACAL;AACA,aAHA,MAGA;AACAC;AACAuB,4BAFA,CAIA;;AACA;AACA;;AACA;;AACAnB;AACA;AACA;AACA;AACA;AACA;AACA,KAvFA;;AAwFA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACAqB,UAnGA,kBAmGAR,EAnGA,EAmGAS,WAnGA,EAmGAC,UAnGA,EAmGAR,SAnGA,EAmGAS,eAnGA,EAmGAC,gBAnGA,EAmGAC,SAnGA,EAmGAC,UAnGA,EAmGAC,SAnGA,EAmGA;AACA;AACA,+CAFA,CAEA;;AACA,6CAHA,CAGA;;AAEA,sBALA,CAMA;;AACA,sDAPA,CAQA;AACA;;AACA;AACA;AACArB;AACA,SAFA,MAEA;AACAA;AACA;AACA,OANA,MAMA;AACA;AACAA;AACA,OAnBA,CAoBA;;;AACA;AACA,wCAtBA,CAuBA;;AACAb,sBAxBA,CAyBA;AACA;;AACAI,yFA3BA,CA4BA;;AACA,sBA7BA,CA6BA;;AACA,4CA9BA,CA8BA;;AACA,kCA/BA,CA+BA;;AACA,2BAhCA,CAgCA;;AACA,8CAjCA,CAiCA;;AACA,gDAlCA,CAkCA;;AACA,yBAnCA,CAmCA;;AACA;AACA,kBArCA,CAqCA;;AACA,mCAtCA,CAsCA;AACA;;AACA;AACA;AACAmB,0CAFA,CAGA;;AACA,oBAJA,CAIA;;AACA,oBALA,CAKA;;AACA,oBANA,CAMA;;AACA,oBAPA,CAOA;AAEA;;AACA,gDAVA,CAUA;AACA;;AACApB,mEAZA,CAaA;;AACAoB;AACApB,kEAfA,CAgBA;;AACAoB;AACApB,kEAlBA,CAkBA;;AACAoB;AACApB,kEApBA,CAoBA;;AACAgC,qBArBA,CAqBA;AACA;;AACA;AACA;AACA;AACA;AACAC,2CADA,CACA;AACA,WALA,CAMA;;;AACA;AACA;AACA/B;AACA,WAHA,MAGA;AACA;AACAA;AACA;;AACA+B,+CAdA,CAeA;AACA;;AACAjC,uGAjBA,CAkBA;;AACA;AACA,kDApBA,CAoBA;;AACA;AACA;AACAA,mHAFA,CAGA;;AACA;AACA;AACA;AACAC,sHAHA,CAIA;;AACAiC;AACAC;AACA,aAXA,CAYA;;;AACA;AACAC;AACA;AACA,WArCA,CAsCA;AACA;;;AACA;AACA;AACA;AACA;AACAhC;AACA,WA7CA,CA8CA;;;AACA6B,6CA/CA,CA+CA;AACA,SAvEA,CAwEA;;;AACAI,yBAzEA,CA0EA;;AACA;AACA;AACA,oBAFA,CAGA;;AACA;AACAC;AACA,WAFA,MAEA;AACAA;AACA,WARA,CASA;;;AACArC,gDAVA,CAWA;AACA;;AACAG,8GAbA,CAcA;AACA;;AACAH;AACA;AACA;AACA;AAzOA;AA/EA","names":["initCanvas","drawIrregular","drawRect","drawRect2","drawLine","drawSnap","drawHook","drawText","data","towercraneParam","number","weight","meter","attachParam","height","totalHeight","created","methods","towercrane","id","rectGap","rectWidth","rectHeight","beginY","endY","endX","k_endX","attach","referHeight","referWidth","emptyRectHeight","numberRectHeight","attachGap","rectSlideX","basicSnap","F2Y","startY","n1Y","n1X","n2Y","beginX","Y"],"sourceRoot":"src","sources":["App.vue"],"sourcesContent":["<template>\r\n  <div>\r\n    <el-row style=\"margin:100px 50px 0 \">\r\n      <!-- 绘制臂节 -->\r\n      <el-col :span=\"12\">\r\n        <canvas id=\"towercrane\" width=\"590px\" height=\"350px\" style=\"border:1px solid #cccccc;padding-left:20px;padding-top:20px\" />\r\n      </el-col>\r\n      <!-- 绘制附着 -->\r\n      <el-col :span=\"12\">\r\n        <canvas id=\"attach\" width=\"480px\" height=\"420px\" style=\"border:1px solid #cccccc;padding-left:20px\" />\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  initCanvas,\r\n  drawIrregular,\r\n  drawRect,\r\n  drawRect2,\r\n  drawLine,\r\n  drawSnap,\r\n  drawHook,\r\n  drawText\r\n} from '@/utils/sketchmap'\r\nexport default {\r\n  data() {\r\n    return {\r\n      towercraneParam: [\r\n        {\r\n          number: [1, 2, 3, 4, 5, 6, 8],\r\n          weight: '4.4t',\r\n          meter: '8m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4, 5, 6],\r\n          weight: '4.4t',\r\n          meter: '6m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4, 5],\r\n          weight: '4.4t',\r\n          meter: '5m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4],\r\n          weight: '4.4t',\r\n          meter: '4m'\r\n        },\r\n        {\r\n          number: [1, 2, 3],\r\n          weight: '4.4t',\r\n          meter: '3m'\r\n        },\r\n        {\r\n          number: [1, 2],\r\n          weight: '4.4t',\r\n          meter: '2m'\r\n        }\r\n      ],\r\n      attachParam: [\r\n        {\r\n          number: [3],\r\n          height: null,\r\n          totalHeight: 3\r\n        },\r\n        {\r\n          number: [3, 4],\r\n          height: 3,\r\n          totalHeight: 4\r\n        },\r\n        {\r\n          number: [3, 4, 5],\r\n          height: 4,\r\n          totalHeight: 5\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6],\r\n          height: 5,\r\n          totalHeight: 6\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6, 7],\r\n          height: 6,\r\n          totalHeight: 7\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6, 7, 8],\r\n          height: 7,\r\n          totalHeight: 8\r\n        },\r\n      ]\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      // 绘制臂节\r\n      this.towercrane('towercrane')\r\n      // 绘制附着\r\n      this.attach('attach')\r\n\r\n    })\r\n  },\r\n  methods: {\r\n    towercrane(id, rectGap, rectWidth, rectHeight) {\r\n      // 绘制容器 宽度 630px 高度 550px\r\n      const towercraneCanvas = document.getElementById(id)\r\n      const ctx = towercraneCanvas.getContext('2d')\r\n      // 初始化canvas\r\n      initCanvas(ctx)\r\n      // canvas开始绘图\r\n\r\n      // 最多显示 8种臂节组合\r\n      let towercrane = []\r\n      const towercraneLength = this.towercraneParam.length // 获取数组的长度\r\n      // 如果id是towercrane的时候\r\n      if (id === 'towercrane') {\r\n        if (towercraneLength <= 8) {\r\n          towercrane = this.towercraneParam\r\n        } else {\r\n          // 否则的话,截取前8组的数据 即 0-7\r\n          // slice [ )\r\n          towercrane = this.towercraneParam.slice(0, 8)\r\n        }\r\n      } else {\r\n        // id是detail的时候\r\n        towercrane = this.towercraneParam\r\n      }\r\n      // 遍历塔吊参数数组\r\n      const beginX = 30 // 固定不变\r\n      let beginY = 0\r\n      let endX = beginX + 40\r\n      let endY = beginY + 20\r\n      const width = rectWidth || 55 // 每个矩形的宽度\r\n      const height = rectHeight || 20 // 每个矩形的高度\r\n      const gap = rectGap || 40\r\n      for (let i = 0; i < towercrane.length; i++) {\r\n        // 如果是第一次,则没有必要加45,加了会导致最上面多出空白\r\n        if (i === 0) {\r\n          beginY += 5\r\n        } else {\r\n          // 否则,每次向下加40\r\n          beginY += gap\r\n        }\r\n        endY = beginY + 20\r\n        // 每次重新给endX赋值\r\n        endX = beginX + 40\r\n        // 获取每一组臂节的数组长度\r\n        const length = towercrane[i].number.length\r\n        // ************************************************************************************************************处理异常数据\r\n        if (length === 0) {\r\n          // 直接画长度为10的臂节,最后加上吊重和米数且不绘制里面的圆形\r\n          // 先获取最终的x和y\r\n          const k_endY = beginY + 20\r\n          let k_endX = beginX + 40\r\n          // ******************************************************************************************处理异常数据之异常数据的显示\r\n          // 异常数据的臂节数依次递减\r\n          for (let k = 10; k > i; k--) {\r\n            // 每次重新给endX赋值\r\n            k_endX += 40\r\n          }\r\n          // 再进行绘制\r\n          drawIrregular(beginX, beginY, beginX - 30, k_endY, k_endX, 1, '#000', 1, true)\r\n          // 再加上吊钩和米数\r\n          const startY = beginY + height\r\n          const endY = startY + 12\r\n\r\n          // 如果 meter为 或 weight  null 的话 则不显示\r\n\r\n          drawHook(k_endX, startY, endY, 3, 0, 270, false, true, 0.5, '#000', towercrane[i].weight ? towercrane[i].weight : '', towercrane[i].meter ? towercrane[i].meter : '')\r\n          // ******************************************************************************************************************处理异常数据\r\n        } else {\r\n          for (let j = 0; j < length; j++) {\r\n            if (j === 0) {\r\n              // 第一个都是不规则的，且都是1\r\n              drawIrregular(beginX, beginY, beginX - 30, endY, endX, 1, '#000', 1)\r\n            } else {\r\n              drawRect(endX, beginY, width, height, '#000', towercrane[i].number[j])\r\n              endX += width\r\n\r\n              // 在最后一个的后面加吊钩\r\n              if (j === length - 1) {\r\n                const startY = beginY + height\r\n                const endY = startY + 12\r\n                drawHook(endX, startY, endY, 3, 0, 270, false, true, 0.5, '#000', towercrane[i].weight ? towercrane[i].weight : '', towercrane[i].meter ? towercrane[i].meter : '')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /** 附着示意图\r\n     * id :画布绘制的容器          （必填项）\r\n     * referHeight：参考高度      （非必填项）    --------有默认值\r\n     * referWidth：参考宽度        （非必填项）   --------有默认值\r\n     * rectWidth：矩形宽度    （非必填项）        --------有默认值\r\n     * emptyRectHeight：空矩形的高度   （非必填项）  --------有默认值\r\n     * numberRectHeight:数字矩形的高度  （非必填项）  --------有默认值\r\n     * attachGap:每道附着之间的间距  （非必填项）  --------有默认值\r\n     * rectSlideX:侧边矩形的距离  （非必填项）  --------有默认值\r\n     * basicSnap：卡扣的基准值  （非必填项）  --------有默认值\r\n     */\r\n    attach(id, referHeight, referWidth, rectWidth, emptyRectHeight, numberRectHeight, attachGap, rectSlideX, basicSnap) {\r\n      // 设置的容器的高度为 550px 宽度为 630px\r\n      const referenceHeight = referHeight || 420 // html中设置的高度,作为这里的参考高度\r\n      const referenceWidth = referWidth || 480 // html中设置的宽度,作为这里的参考宽度\r\n\r\n      let attachParam\r\n      // 获取attachParam的长度\r\n      const attachParamLength = this.attachParam.length\r\n      // 判断是否要截取attachParam里面的前8组数据\r\n      // 如果获取绘制的id是attach\r\n      if (id === 'attach') {\r\n        if (this.attachParamLength <= attachParamLength) {\r\n          attachParam = this.attachParam\r\n        } else {\r\n          attachParam = this.attachParam.slice(0, 8)\r\n        }\r\n      } else {\r\n        // 如果当前绘制的id是detail\r\n        attachParam = this.attachParam\r\n      }\r\n      // 获取dom元素\r\n      const attach = document.getElementById(id)\r\n      const ctx = attach.getContext('2d')\r\n      // 初始化canvas\r\n      initCanvas(ctx)\r\n      // 绘制最底部的水平线\r\n      // startX, startY, endX, endY, lineWidth, bgColor\r\n      drawLine(0, referenceHeight - 10, referenceWidth, referenceHeight - 10, 1, '#000')\r\n      // 开始绘制处\r\n      let beginX = 10 // x轴开始处\r\n      let beginY = referenceHeight - 10 - 5 // 开始处\r\n      const width = rectWidth || 12 // 每个矩形的宽度\r\n      const bottomHeight = 5 // 最底部矩形的高度\r\n      const emptyHeight = emptyRectHeight || 20 // 空矩形的高度\r\n      const numberHeight = numberRectHeight || 15 // 有数字矩形的高度\r\n      const sideHeight = 4 // 侧边矩形的高度\r\n      let startY = 0\r\n      const gap = 8 // 上下间隔\r\n      const attGap = attachGap || 60 // 每一道附着之间的距离\r\n      // ***************************************************************************绘制每一道附着\r\n      for (let i = 0; i < attachParam.length; i++) {\r\n        // 重新赋值\r\n        beginY = referenceHeight - 10 - 5\r\n        // 共有n个矩形，\r\n        let n1Y = 0 // n-1处矩形\r\n        let n1X = 0 // n-1处x坐标\r\n        let n2Y = 0 // n-2处矩形\r\n        let F2Y = 0 // 第2根矩形的第2个Y坐标\r\n\r\n        // const numberArray = attachParam[i].number.slice(2) // 去掉里面的前两个数\r\n        const numberArray = attachParam[i].number // 去掉里面的前两个数\r\n        // 绘制最底部的矩形\r\n        drawRect2(beginX, beginY, width, bottomHeight, '#000', '')\r\n        // 空矩形\r\n        beginY -= emptyHeight\r\n        drawRect2(beginX, beginY, width, emptyHeight, '#000', '')\r\n        // 带数字矩形\r\n        beginY -= numberHeight\r\n        drawRect2(beginX, beginY, width, numberHeight, '#000', 1) // 相当于是固定写死\r\n        beginY -= numberHeight\r\n        drawRect2(beginX, beginY, width, numberHeight, '#000', 2) // 相当于是固定写死\r\n        F2Y = beginY // 赋值给F2Y\r\n        // ***************************************************************************绘制每一道附着的组成\r\n        for (let j = 0; j < numberArray.length; j++) {\r\n          // 先绘制卡扣，再绘制带有数字的矩形\r\n          // 空出来 j === 1 // 因为在上面已经绘制为1时候的矩形了--即 2\r\n          if (j === 0) {\r\n            startY = beginY - numberHeight // 每次到这里相当于重新给startY赋值\r\n          }\r\n          // 绘制卡扣\r\n          if (basicSnap) {\r\n            const basic = basicSnap\r\n            drawSnap(beginX, startY + basic / 2 + 1, beginX + basic * 2 + 2, startY - basic * 2 + 2, beginX + basic * 3 + 1, startY + basic * 2 + 2, beginX + basic * 4 + 1, beginX + basic * 5, beginX, startY + basic / 2 + 1, basic * 3)\r\n          } else {\r\n            // 绘制卡扣\r\n            drawSnap(beginX, startY, beginX + 3, startY - 5, beginX + 6, startY + 5, beginX + 8, beginX + 12, beginX, startY, gap)\r\n          }\r\n          startY = startY - numberHeight - gap\r\n          // 数字矩形\r\n          // ***************************************************************************************添加对异常数据判断的处理之number\r\n          drawRect2(beginX, startY, width, numberHeight, '#000', numberArray[j] ? numberArray[j] : '')\r\n          // 最上面的矩形左侧不绘制侧边矩形\r\n          const length = numberArray.length - 1\r\n          const sideX = (beginX - sideHeight * 3 - 1) // 侧边矩形的x坐标\r\n          if (j < length) {\r\n            // 绘制侧边矩形\r\n            drawRect2(rectSlideX ? sideX - rectSlideX : sideX, startY + sideHeight, width, sideHeight, '#000', '')\r\n            // n-1处矩形\r\n            if (j === length - 1) {\r\n              // 绘制突出线\r\n              // drawLine(sideX, startY + sideHeight * 2, sideX - width - width / 2, startY + sideHeight * 2, 1, '#000')\r\n              drawLine(sideX, startY + sideHeight * 2, sideX - width - width / 2, startY + sideHeight * 2, 1, '#000')\r\n              // 拿到n1Y，n1X的值\r\n              n1Y = startY + sideHeight * 2\r\n              n1X = sideX - width\r\n            }\r\n            // n-2处矩形\r\n            if (j === length - 2) {\r\n              n2Y = startY + sideHeight\r\n            }\r\n          }\r\n          // 先绘制数值\r\n          // 如果当前是附着组成的最上面,则在上面标注最大起升高度的值\r\n          if (j === numberArray.length - 1) {\r\n            // 绘制文字\r\n            // drawText(text, x, y, color, font, textAlign)\r\n            // ***************************************************************************************添加对异常数据判断的处理之totalHeight\r\n            drawText(attachParam[i].totalHeight ? attachParam[i].totalHeight : '', beginX + width / 2, startY - 2, '#f00', '微软雅黑', 'center')\r\n          }\r\n          // 再进行startY的计算\r\n          startY = startY - numberHeight - 2 // 下一个y坐标的开始\r\n        }\r\n        // 每一组之间的距离\r\n        beginX += attGap\r\n        // 第一组不存在等高线\r\n        if (i > 0) {\r\n          // 用来动态判断用哪个Y值\r\n          let Y = 0\r\n          // 第二组，两组卡扣，长度为 const length= (numberArray.length - 1) 和 length-1 不存在  length-2，即只使用n1Y\r\n          if (i === 1) {\r\n            Y = F2Y\r\n          } else {\r\n            Y = n2Y\r\n          }\r\n          // 附着处高度上面的竖线\r\n          drawLine(n1X, n1Y, n1X, Y, 1, '#000')\r\n          // ***************************************************************************************添加对异常数据判断的处理之height\r\n          // 附着处高度数值 数值 高度设置为 20\r\n          drawText(attachParam[i].height ? attachParam[i].height : '', n1X, Y + 15, '#000', '微软雅黑', 'center')\r\n          // 文字下面线段\r\n          // 附着处高度下面的竖线\r\n          drawLine(n1X, Y + 20, n1X, referenceHeight - 10 - 5 + 5, 1, '#000')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}