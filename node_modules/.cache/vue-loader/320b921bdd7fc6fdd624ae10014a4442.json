{"remainingRequest":"I:\\绘图\\testt\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!I:\\绘图\\testt\\src\\App.vue?vue&type=script&lang=js&","dependencies":[{"path":"I:\\绘图\\testt\\src\\App.vue","mtime":1646460197922},{"path":"I:\\绘图\\testt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\thread-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\babel-loader\\lib\\index.js","mtime":1646458951294},{"path":"I:\\绘图\\testt\\node_modules\\cache-loader\\dist\\cjs.js","mtime":1646458935366},{"path":"I:\\绘图\\testt\\node_modules\\vue-loader\\lib\\index.js","mtime":1646458959227}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:"},{"version":3,"sources":["App.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;AAgfile":"App.vue","sourceRoot":"src","sourcesContent":["<template>\r\n  <div>\r\n    <el-row style=\"margin:100px 50px 0 \">\r\n      <!-- 绘制臂节 -->\r\n      <el-col :span=\"12\">\r\n        <canvas id=\"towercrane\" width=\"590px\" height=\"350px\" style=\"border:1px solid #cccccc;padding-left:20px;padding-top:20px\" />\r\n      </el-col>\r\n      <!-- 绘制附着 -->\r\n      <el-col :span=\"12\">\r\n        <canvas id=\"attach\" width=\"480px\" height=\"420px\" style=\"border:1px solid #cccccc;padding-left:20px\" />\r\n      </el-col>\r\n    </el-row>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport {\r\n  initCanvas,\r\n  drawIrregular,\r\n  drawRect,\r\n  drawRect2,\r\n  drawLine,\r\n  drawSnap,\r\n  drawHook,\r\n  drawText\r\n} from '@/utils/sketchmap'\r\nexport default {\r\n  data() {\r\n    return {\r\n      towercraneParam: [\r\n        {\r\n          number: [1, 2, 3, 4, 5, 6, 8],\r\n          weight: '4.4t',\r\n          meter: '8m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4, 5, 6],\r\n          weight: '4.4t',\r\n          meter: '6m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4, 5],\r\n          weight: '4.4t',\r\n          meter: '5m'\r\n        },\r\n        {\r\n          number: [1, 2, 3, 4],\r\n          weight: '4.4t',\r\n          meter: '4m'\r\n        },\r\n        {\r\n          number: [1, 2, 3],\r\n          weight: '4.4t',\r\n          meter: '3m'\r\n        },\r\n        {\r\n          number: [1, 2],\r\n          weight: '4.4t',\r\n          meter: '2m'\r\n        }\r\n      ],\r\n      attachParam: [\r\n        {\r\n          number: [3],\r\n          height: null,\r\n          totalHeight: 3\r\n        },\r\n        {\r\n          number: [3, 4],\r\n          height: 3,\r\n          totalHeight: 4\r\n        },\r\n        {\r\n          number: [3, 4, 5],\r\n          height: 4,\r\n          totalHeight: 5\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6],\r\n          height: 5,\r\n          totalHeight: 6\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6, 7],\r\n          height: 6,\r\n          totalHeight: 7\r\n        },\r\n        {\r\n          number: [3, 4, 5, 6, 7, 8],\r\n          height: 7,\r\n          totalHeight: 8\r\n        },\r\n      ]\r\n\r\n    }\r\n  },\r\n  created() {\r\n    this.$nextTick(() => {\r\n      // 绘制臂节\r\n      this.towercrane('towercrane')\r\n      // 绘制附着\r\n      this.attach('attach')\r\n\r\n    })\r\n  },\r\n  methods: {\r\n    towercrane(id, rectGap, rectWidth, rectHeight) {\r\n      // 绘制容器 宽度 630px 高度 550px\r\n      const towercraneCanvas = document.getElementById(id)\r\n      const ctx = towercraneCanvas.getContext('2d')\r\n      // 初始化canvas\r\n      initCanvas(ctx)\r\n      // canvas开始绘图\r\n\r\n      // 最多显示 8种臂节组合\r\n      let towercrane = []\r\n      const towercraneLength = this.towercraneParam.length // 获取数组的长度\r\n      // 如果id是towercrane的时候\r\n      if (id === 'towercrane') {\r\n        if (towercraneLength <= 8) {\r\n          towercrane = this.towercraneParam\r\n        } else {\r\n          // 否则的话,截取前8组的数据 即 0-7\r\n          // slice [ )\r\n          towercrane = this.towercraneParam.slice(0, 8)\r\n        }\r\n      } else {\r\n        // id是detail的时候\r\n        towercrane = this.towercraneParam\r\n      }\r\n      // 遍历塔吊参数数组\r\n      const beginX = 30 // 固定不变\r\n      let beginY = 0\r\n      let endX = beginX + 40\r\n      let endY = beginY + 20\r\n      const width = rectWidth || 55 // 每个矩形的宽度\r\n      const height = rectHeight || 20 // 每个矩形的高度\r\n      const gap = rectGap || 40\r\n      for (let i = 0; i < towercrane.length; i++) {\r\n        // 如果是第一次,则没有必要加45,加了会导致最上面多出空白\r\n        if (i === 0) {\r\n          beginY += 5\r\n        } else {\r\n          // 否则,每次向下加40\r\n          beginY += gap\r\n        }\r\n        endY = beginY + 20\r\n        // 每次重新给endX赋值\r\n        endX = beginX + 40\r\n        // 获取每一组臂节的数组长度\r\n        const length = towercrane[i].number.length\r\n        // ************************************************************************************************************处理异常数据\r\n        if (length === 0) {\r\n          // 直接画长度为10的臂节,最后加上吊重和米数且不绘制里面的圆形\r\n          // 先获取最终的x和y\r\n          const k_endY = beginY + 20\r\n          let k_endX = beginX + 40\r\n          // ******************************************************************************************处理异常数据之异常数据的显示\r\n          // 异常数据的臂节数依次递减\r\n          for (let k = 10; k > i; k--) {\r\n            // 每次重新给endX赋值\r\n            k_endX += 40\r\n          }\r\n          // 再进行绘制\r\n          drawIrregular(beginX, beginY, beginX - 30, k_endY, k_endX, 1, '#000', 1, true)\r\n          // 再加上吊钩和米数\r\n          const startY = beginY + height\r\n          const endY = startY + 12\r\n\r\n          // 如果 meter为 或 weight  null 的话 则不显示\r\n\r\n          drawHook(k_endX, startY, endY, 3, 0, 270, false, true, 0.5, '#000', towercrane[i].weight ? towercrane[i].weight : '', towercrane[i].meter ? towercrane[i].meter : '')\r\n          // ******************************************************************************************************************处理异常数据\r\n        } else {\r\n          for (let j = 0; j < length; j++) {\r\n            if (j === 0) {\r\n              // 第一个都是不规则的，且都是1\r\n              drawIrregular(beginX, beginY, beginX - 30, endY, endX, 1, '#000', 1)\r\n            } else {\r\n              drawRect(endX, beginY, width, height, '#000', towercrane[i].number[j])\r\n              endX += width\r\n\r\n              // 在最后一个的后面加吊钩\r\n              if (j === length - 1) {\r\n                const startY = beginY + height\r\n                const endY = startY + 12\r\n                drawHook(endX, startY, endY, 3, 0, 270, false, true, 0.5, '#000', towercrane[i].weight ? towercrane[i].weight : '', towercrane[i].meter ? towercrane[i].meter : '')\r\n              }\r\n            }\r\n          }\r\n        }\r\n      }\r\n    },\r\n    /** 附着示意图\r\n     * id :画布绘制的容器          （必填项）\r\n     * referHeight：参考高度      （非必填项）    --------有默认值\r\n     * referWidth：参考宽度        （非必填项）   --------有默认值\r\n     * rectWidth：矩形宽度    （非必填项）        --------有默认值\r\n     * emptyRectHeight：空矩形的高度   （非必填项）  --------有默认值\r\n     * numberRectHeight:数字矩形的高度  （非必填项）  --------有默认值\r\n     * attachGap:每道附着之间的间距  （非必填项）  --------有默认值\r\n     * rectSlideX:侧边矩形的距离  （非必填项）  --------有默认值\r\n     * basicSnap：卡扣的基准值  （非必填项）  --------有默认值\r\n     */\r\n    attach(id, referHeight, referWidth, rectWidth, emptyRectHeight, numberRectHeight, attachGap, rectSlideX, basicSnap) {\r\n      // 设置的容器的高度为 550px 宽度为 630px\r\n      const referenceHeight = referHeight || 420 // html中设置的高度,作为这里的参考高度\r\n      const referenceWidth = referWidth || 480 // html中设置的宽度,作为这里的参考宽度\r\n\r\n      let attachParam\r\n      // 获取attachParam的长度\r\n      const attachParamLength = this.attachParam.length\r\n      // 判断是否要截取attachParam里面的前8组数据\r\n      // 如果获取绘制的id是attach\r\n      if (id === 'attach') {\r\n        if (this.attachParamLength <= attachParamLength) {\r\n          attachParam = this.attachParam\r\n        } else {\r\n          attachParam = this.attachParam.slice(0, 8)\r\n        }\r\n      } else {\r\n        // 如果当前绘制的id是detail\r\n        attachParam = this.attachParam\r\n      }\r\n      // 获取dom元素\r\n      const attach = document.getElementById(id)\r\n      const ctx = attach.getContext('2d')\r\n      // 初始化canvas\r\n      initCanvas(ctx)\r\n      // 绘制最底部的水平线\r\n      // startX, startY, endX, endY, lineWidth, bgColor\r\n      drawLine(0, referenceHeight - 10, referenceWidth, referenceHeight - 10, 1, '#000')\r\n      // 开始绘制处\r\n      let beginX = 10 // x轴开始处\r\n      let beginY = referenceHeight - 10 - 5 // 开始处\r\n      const width = rectWidth || 12 // 每个矩形的宽度\r\n      const bottomHeight = 5 // 最底部矩形的高度\r\n      const emptyHeight = emptyRectHeight || 20 // 空矩形的高度\r\n      const numberHeight = numberRectHeight || 15 // 有数字矩形的高度\r\n      const sideHeight = 4 // 侧边矩形的高度\r\n      let startY = 0\r\n      const gap = 8 // 上下间隔\r\n      const attGap = attachGap || 60 // 每一道附着之间的距离\r\n      // ***************************************************************************绘制每一道附着\r\n      for (let i = 0; i < attachParam.length; i++) {\r\n        // 重新赋值\r\n        beginY = referenceHeight - 10 - 5\r\n        // 共有n个矩形，\r\n        let n1Y = 0 // n-1处矩形\r\n        let n1X = 0 // n-1处x坐标\r\n        let n2Y = 0 // n-2处矩形\r\n        let F2Y = 0 // 第2根矩形的第2个Y坐标\r\n\r\n        // const numberArray = attachParam[i].number.slice(2) // 去掉里面的前两个数\r\n        const numberArray = attachParam[i].number // 去掉里面的前两个数\r\n        // 绘制最底部的矩形\r\n        drawRect2(beginX, beginY, width, bottomHeight, '#000', '')\r\n        // 空矩形\r\n        beginY -= emptyHeight\r\n        drawRect2(beginX, beginY, width, emptyHeight, '#000', '')\r\n        // 带数字矩形\r\n        beginY -= numberHeight\r\n        drawRect2(beginX, beginY, width, numberHeight, '#000', 1) // 相当于是固定写死\r\n        beginY -= numberHeight\r\n        drawRect2(beginX, beginY, width, numberHeight, '#000', 2) // 相当于是固定写死\r\n        F2Y = beginY // 赋值给F2Y\r\n        // ***************************************************************************绘制每一道附着的组成\r\n        for (let j = 0; j < numberArray.length; j++) {\r\n          // 先绘制卡扣，再绘制带有数字的矩形\r\n          // 空出来 j === 1 // 因为在上面已经绘制为1时候的矩形了--即 2\r\n          if (j === 0) {\r\n            startY = beginY - numberHeight // 每次到这里相当于重新给startY赋值\r\n          }\r\n          // 绘制卡扣\r\n          if (basicSnap) {\r\n            const basic = basicSnap\r\n            drawSnap(beginX, startY + basic / 2 + 1, beginX + basic * 2 + 2, startY - basic * 2 + 2, beginX + basic * 3 + 1, startY + basic * 2 + 2, beginX + basic * 4 + 1, beginX + basic * 5, beginX, startY + basic / 2 + 1, basic * 3)\r\n          } else {\r\n            // 绘制卡扣\r\n            drawSnap(beginX, startY, beginX + 3, startY - 5, beginX + 6, startY + 5, beginX + 8, beginX + 12, beginX, startY, gap)\r\n          }\r\n          startY = startY - numberHeight - gap\r\n          // 数字矩形\r\n          // ***************************************************************************************添加对异常数据判断的处理之number\r\n          drawRect2(beginX, startY, width, numberHeight, '#000', numberArray[j] ? numberArray[j] : '')\r\n          // 最上面的矩形左侧不绘制侧边矩形\r\n          const length = numberArray.length - 1\r\n          const sideX = (beginX - sideHeight * 3 - 1) // 侧边矩形的x坐标\r\n          if (j < length) {\r\n            // 绘制侧边矩形\r\n            drawRect2(rectSlideX ? sideX - rectSlideX : sideX, startY + sideHeight, width, sideHeight, '#000', '')\r\n            // n-1处矩形\r\n            if (j === length - 1) {\r\n              // 绘制突出线\r\n              // drawLine(sideX, startY + sideHeight * 2, sideX - width - width / 2, startY + sideHeight * 2, 1, '#000')\r\n              drawLine(sideX, startY + sideHeight * 2, sideX - width - width / 2, startY + sideHeight * 2, 1, '#000')\r\n              // 拿到n1Y，n1X的值\r\n              n1Y = startY + sideHeight * 2\r\n              n1X = sideX - width\r\n            }\r\n            // n-2处矩形\r\n            if (j === length - 2) {\r\n              n2Y = startY + sideHeight\r\n            }\r\n          }\r\n          // 先绘制数值\r\n          // 如果当前是附着组成的最上面,则在上面标注最大起升高度的值\r\n          if (j === numberArray.length - 1) {\r\n            // 绘制文字\r\n            // drawText(text, x, y, color, font, textAlign)\r\n            // ***************************************************************************************添加对异常数据判断的处理之totalHeight\r\n            drawText(attachParam[i].totalHeight ? attachParam[i].totalHeight : '', beginX + width / 2, startY - 2, '#f00', '微软雅黑', 'center')\r\n          }\r\n          // 再进行startY的计算\r\n          startY = startY - numberHeight - 2 // 下一个y坐标的开始\r\n        }\r\n        // 每一组之间的距离\r\n        beginX += attGap\r\n        // 第一组不存在等高线\r\n        if (i > 0) {\r\n          // 用来动态判断用哪个Y值\r\n          let Y = 0\r\n          // 第二组，两组卡扣，长度为 const length= (numberArray.length - 1) 和 length-1 不存在  length-2，即只使用n1Y\r\n          if (i === 1) {\r\n            Y = F2Y\r\n          } else {\r\n            Y = n2Y\r\n          }\r\n          // 附着处高度上面的竖线\r\n          drawLine(n1X, n1Y, n1X, Y, 1, '#000')\r\n          // ***************************************************************************************添加对异常数据判断的处理之height\r\n          // 附着处高度数值 数值 高度设置为 20\r\n          drawText(attachParam[i].height ? attachParam[i].height : '', n1X, Y + 15, '#000', '微软雅黑', 'center')\r\n          // 文字下面线段\r\n          // 附着处高度下面的竖线\r\n          drawLine(n1X, Y + 20, n1X, referenceHeight - 10 - 5 + 5, 1, '#000')\r\n        }\r\n      }\r\n    }\r\n  }\r\n}\r\n</script>"]}]}